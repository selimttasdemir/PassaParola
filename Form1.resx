<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AACRcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+PdHH/jnRx/5Jxbv+caWX/mWxn/5Rt
        bv+ReXL/kXhy/5Rtbf+abGf/nGpm/5Jxbv+OdHH/j3Rx/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fy
        b/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//knFu/5prZ/+bamb/j3Rx/0my
        tf9dn6L/jH1v/zjJgP85y4L/jH5w/1mhpf9MrrD/kHRx/5tpZf+aamb/kXFv/5Fyb/+Rcm//kXJv/5Fy
        b/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kHNw/5Fxbv+RdHD/Tq2x/12e
        oP9mo6D/AMrS/wzO2v9prJH/FtF3/xjUev9lsJX/CdXh/wDv9/9pnpz/WqKl/1Ksr/+Sc2//kHFu/5Bz
        cP+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fxb/+Tb3D/mmxp/3KT
        kv8A3ub/BNjf/2mhn/8lxM3/NMHH/5JycP9orH//aKx//5Bzcv8vxMv/KMzV/2mioP8C09v/AODo/3aO
        i/+bbWn/lW9r/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+PdHD/lW5u/1qz
        gf8z2YT/aqOE/ynE0f8qyM7/j3Vy/5Zxbf+VcGz/k3Bt/5hpbf+XaW3/k29s/5Vxbf+Xbmr/jnd0/ybK
        0v8tw8v/YqCi/xfP2P9Pq67/lm5q/490cf+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJu/5du
        av+XdG7/NdaE/wbhgf9Uv4P/nWlr/5Nzbv+TcG3/kHJw/5BycP+Rc3D/j3Rw/490cP+Qc3D/kHJv/5Bz
        cP+TcG3/knRw/59nY/9CxcX/AO/6/yXO0f+Ycm7/lm1p/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Bz
        cP+UcG3/Tauu/xzS3/9WtJn/VLp9/4OEdv+Tbm7/kHNv/5FzcP+TdHH/k3Ry/5N0cf+Rcm//kXJv/5Fy
        b/+Rcm//kXJv/5BzcP+Qc3D/lG9s/3+Egv9Bur//TrGz/xzS3P9OrLD/lW9r/5BzcP+Rcm//kXJv/5Fy
        b/+Rcm//kXFu/5hwbP8e0NL/ANbg/023u/+kXWH/kXFw/5Fzb/+Rcm//kXJu/4ppZv+JaGX/imlm/5Bx
        bv+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Qc3D/knFu/6ZcWP9Hu7n/AO/1/yLc3f+aa2f/kXJv/5Fy
        b/+Rcm//kXJv/5Jxbv+Rc3D/dI+N/2Ghof89vcP/gYJ//5JxbP+QdHD/kXJv/5Bxbv+UdnP/ybu6/9HF
        xP/KvLv/lXh1/5Bxbf+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+PdHH/knFu/3+Egv89vcP/YZ+f/3WL
        iv+Scm//kXJv/5Fyb/+PdHH/mmpm/0yxtf8A1eP/NL/G/6FoY/+Tb2z/kHNw/5Fyb/+Rc3D/j3Bt/5d5
        dv/28/P///////f19f+ZfXr/kHBt/5J0cf+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Qc3D/lG9s/59o
        Y/8uyM//AO36/1GvtP+aaWX/j3Rx/450cv+baWX/Vqeq/wDV4/8ryND/lHFu/49zcP+Rcm//kXJv/5Fy
        cP+QcG3/lnh1//Pw8P//////9fPz/5l9ev+NbWr/j29s/5Fyb/+TdHH/kXJv/5Fyb/+Rcm//kXJv/5Fy
        b/+Qc3D/knJu/yfQ2P8A6/r/WqWn/5tpZf+OdHL/knFu/490cf9mnp//aaGh/453c/+TcG3/kHNw/5Fy
        b/+Rcm//kXNw/5Bwbf+WeHX/9fLy///////18/P/lXh1/5d6d/+dgn//knNw/4poZf+Rcm//kXNw/5Fy
        b/+Rcm//kXJv/5BzcP+TcG3/jnd0/2ifn/9onp//kHRw/5Jxbv+baWT/SLe7/wDX5P8uwcn/mG9q/49z
        cP+Rcm//kXJv/5Fyb/+Rc3D/kHBt/5Z4df/18vL///////r5+f/l397/9vT0//n4+P/x7ez/xbSy/49v
        bP+QcW7/kXJv/5Fyb/+Rcm//kXJv/5BycP+XcWz/KcLJ/wDY5/9NsbT/nGll/5prZv9VqK3/ANjq/zTC
        yf+Wb2v/kHNw/5Fyb/+Rcm//kXJv/5FzcP+QcG3/lnh1//Xz8v///////v7+//////////////////7+
        /f//////1MjH/4xraP+Sc3D/kXJv/5Fyb/+Rcm//kHJv/5Vxbf8vwsj/AN/l/1impf+aamf/lG5u/416
        b/9oqZP/kXJw/5Nwbf+Rcm//kXJv/5Fyb/+Rcm//kXNw/5Bwbf+WeHX/9fLy///////+/v7/18zL/72p
        p//Ux8b//v39//39/f//////rJWS/4traP+SdHH/kXJv/5Fyb/+Rc3D/k29s/5B3cf9xi67/kG94/5Ny
        a/+Rd3H/PNGG/xrZev9qq3//l2lt/5B0b/+Rcm//kXJv/5Fyb/+Rc3D/kHBt/5Z4df/18vL///////f1
        9P+SdHH/iGVi/4ViX//RxcT////////////Qw8L/iWhl/5N0cf+Rcm//kXJv/5Bycf+Uc2b/fG2m/0VK
        1v9eYM3/knN0/5B3cf832Ij/F+uJ/2avgf+YaGz/j3Rw/5Fyb/+Rcm//kXJv/5FzcP+QcG3/lnh1//Xy
        8v//////9vT0/5p+e/+TdHH/jGxp/66Ylf///////////+LZ2P+Ma2j/knRx/5Fyb/+Rcm//kHJx/5Rz
        Zv97bKb/SE7l/19i0v+Rc3L/lG1u/4l+cv9msIL/kXFu/5Nwb/+Rc2//kXJv/5Fyb/+Rcm//kXNw/5Bw
        bf+WeHX/9fLy///////29fT/mHx5/5Bxbv+NbWn/q5OQ////////////5t/e/45ua/+Sc3D/kXJv/5Fy
        b/+Rc2//k29u/5F2bv92iJn/kG15/5Nya/+Xam3/Zqx//yHvjf9Ky4j/lG5u/5Bzb/+Rcm//kXJv/5Fy
        b/+Rc3D/kHBt/5Z4df/18vL///////f19P+Zfnv/knRx/4hmY/+6p6X////////////d09P/i2pm/5J0
        cf+Rcm//kXJv/5Byb/+UcXD/RsOE/x7vhP9nrn7/l2ht/5lobP9Vv4X/DfCI/0LTg/+Vbm3/kHNw/5Fy
        b/+Rcm//kXJv/5FzcP+QcG3/lnh1//Xy8v//////9vT0/5N1c/+IZmP/mHt4/+3o5////////////8W1
        s/+JaGX/k3Rx/5Fyb/+Rcm//kXJw/5R0bv860n//DuWF/1m/hv+ZZmv/knBv/451b/9tpnz/bJ+T/490
        dP+TcG3/kXNw/5Fyb/+Rcm//kXNw/5Bwbf+WeHX/8/Hw///////8+vr/4NfW/9vQz//z8O//////////
        ///29PT/m357/45vbP+Sc3D/kXJv/5FycP+Rc2z/km11/3uCkv9tqXz/j3Rv/5Jxb/+PdHH/m2lm/1ii
        rf8A1eT/LsbL/5RybP+Pc3D/kXJv/5Fyb/+Rc3D/j3Bt/5Z5dv/28/P///////7+/v/////////////+
        /v//////+fj4/62XlP+La2j/knRx/5Fyb/+Rcm//kHJv/5F1b/9iZcj/SE/i/4Biqv+VcmX/kHJx/490
        cf+aamb/SbK0/wDl8f8vw8//nmZp/5Jvb/+Qc2//kXJv/5Fyb/+Rcm//kXJv/7mlpP/Ux8b/4trZ/+rk
        5P/r5ub/5d7e/8u9u/+cgH3/i2to/5J0cf+Rcm//kXJv/5Bzb/+Tbm7/nGps/2Zczf9CVOn/dW6y/5Rz
        Zf+QcnH/kXJv/5Jxbv+QdHD/b5KU/2mjg/9UwYH/hoBz/5Nvb/+Qcm//kXJv/5Fyb/+Rcm//imlm/4ln
        ZP+NbGn/kHFu/5Fyb/+NbWr/iWdk/45ua/+SdHH/kXJv/5Fyb/+QdHD/kXFw/4SDdf9SxIH/cJeE/4Zq
        kv+Qc27/kXJv/5Fyb/+Rcm//kXNv/5Fwbv+Zb2n/L9aF/wfYff9YvYf/m2dq/5F2cf+Rcm//kXJv/5Fy
        b/+TdHH/k3Rx/5JzcP+Rcm//kXJv/5JzcP+TdHH/knNw/5Fyb/+Rcm//kHNw/5JxbP+lYGP/VLuB/wXb
        fv8y2If/lnVo/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kHNv/5NwcP9YtH//MtmH/2WJbP92XmD/hWxn/5R0
        cf+Rcm//kXNv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXNw/49zcP+Tb2z/gYSA/0ep
        sv9WsZX/NNyF/1q1gv+UbW//kHNv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXFv/5dxcf+Ja2X/fnJ4/52m
        rv9zZWX/kG1o/45va/+PcG3/kXNw/5FzcP+Rc3D/j3Rx/490cf+RcnD/kHJw/5BycP+Tb23/lHNu/6Bo
        Y/9Cvr//ANrl/yTR2v+Wc2//lW1u/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kHNw/49v
        bP95amj/fHd6/4Vwbf/e1dP/2dDO/5R1cf+Pb2z/j29r/49wbf+aa2f/mmpn/5Jybf+TdG3/lXJr/4x7
        dP8rw8v/M73D/2Gio/8S1+H/TK+y/5dtaf+PdHD/kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fy
        b/+Rcm//knNw/5Fxbf9/Xlr/spmU/+nt7f/o6un/uKKe/9HJx//PxcP/lnJu/1yjpf9dpKX/k3Bw/2Zl
        v/9mWcH/cZSf/wDg5P8A5vD/dY2J/5lva/+VcGz/kXFu/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fy
        b/+Rcm//kXJv/5Fyb/+Rcm//knNw/5R0cv+Rc2//ybq2/7uppf+6paH/5ezs/+3f3/+HrKn/ANbh/wDd
        4P9sla//S0rS/zxO3v+CcJ//ULCp/02us/+Rc3D/kXFu/5BzcP+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fy
        b/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Bxbv+KaWb/iWhl/5R2c//Kvrr/v6ik/4V8
        eP8hz9j/Ic/Y/4h+ef96aKf/cWq4/5Bxcf+aamX/mmpm/5Jxbv+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fy
        b/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5Fyb/+Rcm//kXJv/5N0cf+TdHH/kHBt/4po
        Zf+Ka2j/lG5q/5J1cv+RdXL/lW5q/5R0aP+Vc2X/knJu/490cv+PdHH/kXJv/5Fyb/+Rcm//kXJv/5Fy
        b/+Rcm//kXJv/5Fyb/+Rcm//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>